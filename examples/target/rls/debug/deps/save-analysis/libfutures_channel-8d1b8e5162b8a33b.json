{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14","program":"/home/kuangjux/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"sink\"","--cfg","feature=\"std\"","-C","metadata=8d1b8e5162b8a33b","-C","extra-filename=-8d1b8e5162b8a33b","--out-dir","/home/kuangjux/Rust-Chat/examples/target/rls/debug/deps","-L","dependency=/home/kuangjux/Rust-Chat/examples/target/rls/debug/deps","--extern","futures_core=/home/kuangjux/Rust-Chat/examples/target/rls/debug/deps/libfutures_core-cafa953cd01b34a8.rmeta","--extern","futures_sink=/home/kuangjux/Rust-Chat/examples/target/rls/debug/deps/libfutures_sink-0381ccf8066d2927.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kuangjux/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/kuangjux/Rust-Chat/examples/target/rls/debug/deps/libfutures_channel-8d1b8e5162b8a33b.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[12485598980804087058,8036414296481076739]},"crate_root":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src","external_crates":[{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1838315723892229120,15430540928367081171]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[2858088706689600179,17176650857302713463]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15879356389475821678,5643460802079966270]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8920863043171661139,6394972819860350927]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7444524629517225000,3862632196027588969]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14512907882251490092,5479590506689914850]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11667301639251970573,16399510957176964765]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7447291644365204408,1470667821728193545]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6110035509052048891,1769159197608489149]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2517392378542245850,1007682534799069383]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10841319041269114641,5435836511512932455]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11288057705607810041,2650294536215064940]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3615958118357796166,6340715783279141278]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[5192402504599619502,9026648258735454425]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18157078792379649936,5967302931976128037]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[7273518522570529581,7645160771462661682]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6693370726427661459,15782525456943635124]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","num":18,"id":{"name":"futures_core","disambiguator":[2548175789074930697,2763695913560992829]}},{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/sink_impl.rs","num":19,"id":{"name":"futures_sink","disambiguator":[2572479694025167522,14813314080588573818]}}],"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":291}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ other. This module contains two basic abstractions for doing so:","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   library.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":687,"byte_end":775,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":943,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":567},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":85},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":385},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":388},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":123},{"krate":0,"index":414},{"krate":0,"index":425},{"krate":0,"index":423},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":427},{"krate":0,"index":442},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":445},{"krate":0,"index":458},{"krate":0,"index":456},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":460},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":486},{"krate":0,"index":484},{"krate":0,"index":483},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":173},{"krate":0,"index":188},{"krate":0,"index":203},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":1569,"byte_end":1592,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896420,"byte_end":8896489,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896490,"byte_end":8896513,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896514,"byte_end":8896517,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896518,"byte_end":8896588,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896589,"byte_end":8896668,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896669,"byte_end":8896744,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896745,"byte_end":8896817,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896818,"byte_end":8896900,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896901,"byte_end":8896978,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8896979,"byte_end":8897056,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897057,"byte_end":8897102,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897103,"byte_end":8897106,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897107,"byte_end":8897183,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897184,"byte_end":8897187,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897188,"byte_end":8897207,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897208,"byte_end":8897211,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897212,"byte_end":8897278,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897279,"byte_end":8897359,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897360,"byte_end":8897417,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897418,"byte_end":8897452,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897453,"byte_end":8897456,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897457,"byte_end":8897527,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897528,"byte_end":8897607,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897608,"byte_end":8897631,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897632,"byte_end":8897635,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897636,"byte_end":8897656,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897657,"byte_end":8897660,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897661,"byte_end":8897727,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897728,"byte_end":8897804,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897805,"byte_end":8897885,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897886,"byte_end":8897966,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8897967,"byte_end":8898039,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8898040,"byte_end":8898099,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8898100,"byte_end":8898103,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8898104,"byte_end":8898138,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8898139,"byte_end":8898177,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8898178,"byte_end":8898237,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8898238,"byte_end":8898266,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8898267,"byte_end":8898337,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901728,"byte_end":8901734,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901580,"byte_end":8901631,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901632,"byte_end":8901635,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901636,"byte_end":8901699,"line_start":124,"line_end":124,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901926,"byte_end":8901941,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901771,"byte_end":8901825,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901826,"byte_end":8901829,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901830,"byte_end":8901897,"line_start":130,"line_end":130,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902213,"byte_end":8902221,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":404}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902068,"byte_end":8902116,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902117,"byte_end":8902120,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902121,"byte_end":8902184,"line_start":139,"line_end":139,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902423,"byte_end":8902440,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":410}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902271,"byte_end":8902322,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902323,"byte_end":8902326,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902327,"byte_end":8902394,"line_start":147,"line_end":147,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902717,"byte_end":8902726,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":415}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902607,"byte_end":8902666,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":427},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902865,"byte_end":8902877,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902757,"byte_end":8902821,"line_start":162,"line_end":162,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":125},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903087,"byte_end":8903099,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":126}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903009,"byte_end":8903075,"line_start":175,"line_end":175,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903549,"byte_end":8903556,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903466,"byte_end":8903537,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903773,"byte_end":8903788,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903686,"byte_end":8903761,"line_start":201,"line_end":201,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904613,"byte_end":8904620,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904530,"byte_end":8904601,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904763,"byte_end":8904778,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904676,"byte_end":8904751,"line_start":236,"line_end":236,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904919,"byte_end":8904929,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904842,"byte_end":8904907,"line_start":241,"line_end":241,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8905037,"byte_end":8905052,"line_start":247,"line_end":247,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"pub fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904971,"byte_end":8905025,"line_start":246,"line_end":246,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":159},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8908457,"byte_end":8908464,"line_start":364,"line_end":364,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8907831,"byte_end":8907911,"line_start":353,"line_end":353,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8907912,"byte_end":8907915,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8907916,"byte_end":8907995,"line_start":355,"line_end":355,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8907996,"byte_end":8908073,"line_start":356,"line_end":356,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8908074,"byte_end":8908145,"line_start":357,"line_end":357,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8908146,"byte_end":8908219,"line_start":358,"line_end":358,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8908220,"byte_end":8908290,"line_start":359,"line_end":359,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8908291,"byte_end":8908294,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8908295,"byte_end":8908349,"line_start":361,"line_end":361,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8908350,"byte_end":8908437,"line_start":362,"line_end":362,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8908438,"byte_end":8908449,"line_start":363,"line_end":363,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909728,"byte_end":8909737,"line_start":401,"line_end":401,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909216,"byte_end":8909292,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909293,"byte_end":8909303,"line_start":392,"line_end":392,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909304,"byte_end":8909307,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909308,"byte_end":8909388,"line_start":394,"line_end":394,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909389,"byte_end":8909468,"line_start":395,"line_end":395,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909469,"byte_end":8909482,"line_start":396,"line_end":396,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909483,"byte_end":8909486,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909487,"byte_end":8909566,"line_start":398,"line_end":398,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909567,"byte_end":8909643,"line_start":399,"line_end":399,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8909644,"byte_end":8909720,"line_start":400,"line_end":400,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8920507,"byte_end":8920515,"line_start":723,"line_end":723,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8920394,"byte_end":8920464,"line_start":721,"line_end":721,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8920469,"byte_end":8920495,"line_start":722,"line_end":722,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921076,"byte_end":8921086,"line_start":741,"line_end":741,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8920860,"byte_end":8920894,"line_start":736,"line_end":736,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8920899,"byte_end":8920902,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8920907,"byte_end":8920952,"line_start":738,"line_end":738,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8920957,"byte_end":8921028,"line_start":739,"line_end":739,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921033,"byte_end":8921064,"line_start":740,"line_end":740,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921714,"byte_end":8921724,"line_start":758,"line_end":758,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921203,"byte_end":8921277,"line_start":746,"line_end":746,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921282,"byte_end":8921320,"line_start":747,"line_end":747,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921325,"byte_end":8921328,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921333,"byte_end":8921351,"line_start":749,"line_end":749,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921356,"byte_end":8921359,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921364,"byte_end":8921388,"line_start":751,"line_end":751,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921393,"byte_end":8921396,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921401,"byte_end":8921460,"line_start":753,"line_end":753,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921465,"byte_end":8921514,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921519,"byte_end":8921595,"line_start":755,"line_end":755,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921600,"byte_end":8921628,"line_start":756,"line_end":756,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921633,"byte_end":8921702,"line_start":757,"line_end":757,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8922049,"byte_end":8922058,"line_start":769,"line_end":769,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8921968,"byte_end":8922037,"line_start":768,"line_end":768,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8922248,"byte_end":8922261,"line_start":774,"line_end":774,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"pub fn close_channel(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8922162,"byte_end":8922236,"line_start":773,"line_end":773,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8922477,"byte_end":8922487,"line_start":781,"line_end":781,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8922374,"byte_end":8922465,"line_start":780,"line_end":780,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8922605,"byte_end":8922618,"line_start":786,"line_end":786,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8922535,"byte_end":8922593,"line_start":785,"line_end":785,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8922866,"byte_end":8922881,"line_start":794,"line_end":794,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8922801,"byte_end":8922854,"line_start":793,"line_end":793,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923149,"byte_end":8923162,"line_start":802,"line_end":802,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923089,"byte_end":8923137,"line_start":801,"line_end":801,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923443,"byte_end":8923453,"line_start":812,"line_end":812,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"pub fn poll_ready(&Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923376,"byte_end":8923431,"line_start":811,"line_end":811,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923774,"byte_end":8923783,"line_start":823,"line_end":823,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923693,"byte_end":8923762,"line_start":822,"line_end":822,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923975,"byte_end":8923988,"line_start":828,"line_end":828,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"pub fn close_channel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923889,"byte_end":8923963,"line_start":827,"line_end":827,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8924196,"byte_end":8924206,"line_start":835,"line_end":835,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8924093,"byte_end":8924184,"line_start":834,"line_end":834,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8924923,"byte_end":8924933,"line_start":860,"line_end":860,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8924728,"byte_end":8924762,"line_start":856,"line_end":856,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8924767,"byte_end":8924770,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8924775,"byte_end":8924848,"line_start":858,"line_end":858,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8924853,"byte_end":8924911,"line_start":859,"line_end":859,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925298,"byte_end":8925312,"line_start":870,"line_end":870,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925052,"byte_end":8925091,"line_start":865,"line_end":865,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925096,"byte_end":8925099,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925104,"byte_end":8925179,"line_start":867,"line_end":867,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925184,"byte_end":8925260,"line_start":868,"line_end":868,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925265,"byte_end":8925286,"line_start":869,"line_end":869,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925471,"byte_end":8925484,"line_start":875,"line_end":875,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925401,"byte_end":8925459,"line_start":874,"line_end":874,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925732,"byte_end":8925747,"line_start":883,"line_end":883,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925667,"byte_end":8925720,"line_start":882,"line_end":882,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8926024,"byte_end":8926037,"line_start":891,"line_end":891,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8925964,"byte_end":8926012,"line_start":890,"line_end":890,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8929648,"byte_end":8929653,"line_start":1006,"line_end":1006,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8929411,"byte_end":8929475,"line_start":1002,"line_end":1002,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8929480,"byte_end":8929483,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8929488,"byte_end":8929563,"line_start":1004,"line_end":1004,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8929568,"byte_end":8929636,"line_start":1005,"line_end":1005,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930576,"byte_end":8930584,"line_start":1028,"line_end":1028,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930048,"byte_end":8930123,"line_start":1018,"line_end":1018,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930128,"byte_end":8930131,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930136,"byte_end":8930208,"line_start":1020,"line_end":1020,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930213,"byte_end":8930287,"line_start":1021,"line_end":1021,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930292,"byte_end":8930312,"line_start":1022,"line_end":1022,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930317,"byte_end":8930320,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930325,"byte_end":8930351,"line_start":1024,"line_end":1024,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930356,"byte_end":8930399,"line_start":1025,"line_end":1025,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930404,"byte_end":8930477,"line_start":1026,"line_end":1026,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8930482,"byte_end":8930564,"line_start":1027,"line_end":1027,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935513,"byte_end":8935518,"line_start":1165,"line_end":1165,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935276,"byte_end":8935340,"line_start":1161,"line_end":1161,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935345,"byte_end":8935348,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935353,"byte_end":8935428,"line_start":1163,"line_end":1163,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935433,"byte_end":8935501,"line_start":1164,"line_end":1164,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8936160,"byte_end":8936168,"line_start":1181,"line_end":1181,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935632,"byte_end":8935707,"line_start":1171,"line_end":1171,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935712,"byte_end":8935715,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935720,"byte_end":8935792,"line_start":1173,"line_end":1173,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935797,"byte_end":8935871,"line_start":1174,"line_end":1174,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935876,"byte_end":8935896,"line_start":1175,"line_end":1175,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935901,"byte_end":8935904,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935909,"byte_end":8935935,"line_start":1177,"line_end":1177,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935940,"byte_end":8935983,"line_start":1178,"line_end":1178,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935988,"byte_end":8936061,"line_start":1179,"line_end":1179,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8936066,"byte_end":8936148,"line_start":1180,"line_end":1180,"column_start":5,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":291},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":611},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":505},{"krate":0,"index":511},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":322},{"krate":0,"index":329},{"krate":0,"index":514},{"krate":0,"index":518},{"krate":0,"index":332},{"krate":0,"index":522},{"krate":0,"index":533},{"krate":0,"index":532},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":524},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":350}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":1615,"byte_end":1640,"line_start":42,"line_end":42,"column_start":5,"column_end":30}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951129,"byte_end":8951199,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951200,"byte_end":8951203,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951204,"byte_end":8951259,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951753,"byte_end":8951761,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":495}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951518,"byte_end":8951594,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951595,"byte_end":8951598,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951599,"byte_end":8951656,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951657,"byte_end":8951724,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":499},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951946,"byte_end":8951952,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":501}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951796,"byte_end":8951855,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951856,"byte_end":8951859,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8951860,"byte_end":8951917,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":309},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8955056,"byte_end":8955063,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8953857,"byte_end":8953945,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8953946,"byte_end":8953949,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8953950,"byte_end":8954025,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954026,"byte_end":8954029,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954030,"byte_end":8954110,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954111,"byte_end":8954189,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954190,"byte_end":8954267,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954268,"byte_end":8954346,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954347,"byte_end":8954395,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954396,"byte_end":8954399,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954400,"byte_end":8954460,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954461,"byte_end":8954464,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954465,"byte_end":8954479,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954480,"byte_end":8954483,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954484,"byte_end":8954491,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954492,"byte_end":8954526,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954527,"byte_end":8954565,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954566,"byte_end":8954569,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954570,"byte_end":8954625,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954626,"byte_end":8954629,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954630,"byte_end":8954652,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954653,"byte_end":8954697,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954698,"byte_end":8954749,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954750,"byte_end":8954798,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954799,"byte_end":8954831,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954832,"byte_end":8954839,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954840,"byte_end":8954843,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954844,"byte_end":8954890,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954891,"byte_end":8954894,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954895,"byte_end":8954934,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954935,"byte_end":8954980,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8954981,"byte_end":8955032,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8955033,"byte_end":8955040,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8955041,"byte_end":8955048,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964326,"byte_end":8964330,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8963833,"byte_end":8963885,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8963890,"byte_end":8963893,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8963898,"byte_end":8963970,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8963975,"byte_end":8964047,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964052,"byte_end":8964084,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964089,"byte_end":8964092,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964097,"byte_end":8964169,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964174,"byte_end":8964244,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964249,"byte_end":8964314,"line_start":344,"line_end":344,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964982,"byte_end":8964995,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"pub fn poll_canceled(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964400,"byte_end":8964461,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964466,"byte_end":8964510,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964515,"byte_end":8964518,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964523,"byte_end":8964542,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964547,"byte_end":8964550,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964555,"byte_end":8964625,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964630,"byte_end":8964704,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964709,"byte_end":8964712,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964717,"byte_end":8964785,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964790,"byte_end":8964863,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964868,"byte_end":8964940,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8964945,"byte_end":8964970,"line_start":360,"line_end":360,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965359,"byte_end":8965371,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"pub fn cancellation(&mut Self) -> Cancellation<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965091,"byte_end":8965160,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965165,"byte_end":8965209,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965214,"byte_end":8965217,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965222,"byte_end":8965293,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965298,"byte_end":8965347,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965795,"byte_end":8965806,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965456,"byte_end":8965521,"line_start":374,"line_end":374,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965526,"byte_end":8965547,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965552,"byte_end":8965555,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965560,"byte_end":8965635,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965640,"byte_end":8965711,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965716,"byte_end":8965783,"line_start":379,"line_end":379,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966030,"byte_end":8966045,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965868,"byte_end":8965961,"line_start":384,"line_end":384,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8965966,"byte_end":8966018,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":514},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966506,"byte_end":8966518,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":517}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966238,"byte_end":8966313,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966314,"byte_end":8966317,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966318,"byte_end":8966409,"line_start":399,"line_end":399,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966410,"byte_end":8966477,"line_start":400,"line_end":400,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966908,"byte_end":8966916,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966745,"byte_end":8966816,"line_start":414,"line_end":414,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966817,"byte_end":8966851,"line_start":415,"line_end":415,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967524,"byte_end":8967529,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967152,"byte_end":8967225,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967230,"byte_end":8967245,"line_start":430,"line_end":430,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967250,"byte_end":8967253,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967258,"byte_end":8967325,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967330,"byte_end":8967392,"line_start":433,"line_end":433,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967397,"byte_end":8967470,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967475,"byte_end":8967512,"line_start":435,"line_end":435,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967960,"byte_end":8967968,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967584,"byte_end":8967651,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967656,"byte_end":8967659,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967664,"byte_end":8967731,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967736,"byte_end":8967739,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967744,"byte_end":8967817,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967822,"byte_end":8967888,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967893,"byte_end":8967896,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967901,"byte_end":8967948,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8894431,"byte_end":8894435,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8894472,"byte_end":8894476,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8894492,"byte_end":8894496,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8895334,"byte_end":8895341,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8895594,"byte_end":8895601,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8895964,"byte_end":8895971,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8945084,"byte_end":8945089,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8945127,"byte_end":8945132,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8945149,"byte_end":8945153,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8945346,"byte_end":8945351,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8948248,"byte_end":8948253,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/sink_impl.rs","byte_start":8948715,"byte_end":8948721,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/sink_impl.rs","byte_start":8949667,"byte_end":8949682,"line_start":45,"line_end":45,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901509,"byte_end":8901529,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901554,"byte_end":8901572,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902043,"byte_end":8902058,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902582,"byte_end":8902599,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903142,"byte_end":8903151,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903431,"byte_end":8903440,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903450,"byte_end":8903459,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903947,"byte_end":8903959,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904166,"byte_end":8904178,"line_start":218,"line_end":218,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904480,"byte_end":8904492,"line_start":228,"line_end":228,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904508,"byte_end":8904520,"line_start":230,"line_end":230,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8905120,"byte_end":8905132,"line_start":252,"line_end":252,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8905289,"byte_end":8905301,"line_start":259,"line_end":259,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8905450,"byte_end":8905462,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8907558,"byte_end":8907568,"line_start":336,"line_end":336,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8910237,"byte_end":8910257,"line_start":427,"line_end":427,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8913115,"byte_end":8913133,"line_start":513,"line_end":513,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8920378,"byte_end":8920384,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923351,"byte_end":8923366,"line_start":810,"line_end":810,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8926236,"byte_end":8926242,"line_start":899,"line_end":899,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8926334,"byte_end":8926349,"line_start":905,"line_end":905,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8926441,"byte_end":8926461,"line_start":911,"line_end":911,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8927562,"byte_end":8927580,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8928831,"byte_end":8928851,"line_start":973,"line_end":973,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8929096,"byte_end":8929114,"line_start":984,"line_end":984,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8929393,"byte_end":8929401,"line_start":1001,"line_end":1001,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8933058,"byte_end":8933066,"line_start":1095,"line_end":1095,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8933098,"byte_end":8933106,"line_start":1097,"line_end":1097,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8933207,"byte_end":8933215,"line_start":1103,"line_end":1103,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8934095,"byte_end":8934103,"line_start":1130,"line_end":1130,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935249,"byte_end":8935266,"line_start":1160,"line_end":1160,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8938127,"byte_end":8938144,"line_start":1234,"line_end":1234,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8938245,"byte_end":8938262,"line_start":1240,"line_end":1240,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8939138,"byte_end":8939155,"line_start":1267,"line_end":1267,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8940341,"byte_end":8940355,"line_start":1303,"line_end":1303,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8940638,"byte_end":8940650,"line_start":1315,"line_end":1315,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941176,"byte_end":8941190,"line_start":1333,"line_end":1333,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941227,"byte_end":8941241,"line_start":1334,"line_end":1334,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941279,"byte_end":8941291,"line_start":1336,"line_end":1336,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941328,"byte_end":8941340,"line_start":1337,"line_end":1337,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941353,"byte_end":8941358,"line_start":1339,"line_end":1339,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8952060,"byte_end":8952068,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8952093,"byte_end":8952099,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8955288,"byte_end":8955293,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8963817,"byte_end":8963823,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966163,"byte_end":8966169,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966580,"byte_end":8966592,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966941,"byte_end":8966949,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967113,"byte_end":8967121,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967134,"byte_end":8967142,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8968071,"byte_end":8968079,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8968296,"byte_end":8968304,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8968645,"byte_end":8968653,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":1605,"byte_end":1609,"line_start":41,"line_end":41,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":1653,"byte_end":1660,"line_start":43,"line_end":43,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":291}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8894431,"byte_end":8894435,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8894472,"byte_end":8894476,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8894492,"byte_end":8894496,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8895334,"byte_end":8895341,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2279}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8895594,"byte_end":8895601,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2292}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":8895964,"byte_end":8895971,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2303}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8945084,"byte_end":8945089,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8945127,"byte_end":8945132,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8945149,"byte_end":8945153,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8945346,"byte_end":8945351,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":8948248,"byte_end":8948253,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":2303}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/sink_impl.rs","byte_start":8948715,"byte_end":8948721,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":388},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/sink_impl.rs","byte_start":8949667,"byte_end":8949682,"line_start":45,"line_end":45,"column_start":21,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":395},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901509,"byte_end":8901529,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2120}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901554,"byte_end":8901572,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":2120}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8901999,"byte_end":8902003,"line_start":134,"line_end":134,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":121}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902006,"byte_end":8902010,"line_start":134,"line_end":134,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":121}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902013,"byte_end":8902018,"line_start":134,"line_end":134,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":121}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902043,"byte_end":8902058,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":395},"to":{"krate":0,"index":121}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8902582,"byte_end":8902599,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":2120}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903142,"byte_end":8903151,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":6949}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903431,"byte_end":8903440,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":414},"to":{"krate":1,"index":1749}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903450,"byte_end":8903459,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8903947,"byte_end":8903959,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":6944}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904166,"byte_end":8904178,"line_start":218,"line_end":218,"column_start":26,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":6949}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904480,"byte_end":8904492,"line_start":228,"line_end":228,"column_start":47,"column_end":59},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":427},"to":{"krate":1,"index":1749}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8904508,"byte_end":8904520,"line_start":230,"line_end":230,"column_start":9,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8905120,"byte_end":8905132,"line_start":252,"line_end":252,"column_start":21,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":6944}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8905289,"byte_end":8905301,"line_start":259,"line_end":259,"column_start":23,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":6949}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8905450,"byte_end":8905462,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":125},"to":{"krate":1,"index":1749}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8907558,"byte_end":8907568,"line_start":336,"line_end":336,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8910237,"byte_end":8910257,"line_start":427,"line_end":427,"column_start":9,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8913115,"byte_end":8913133,"line_start":513,"line_end":513,"column_start":9,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8920378,"byte_end":8920384,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8923351,"byte_end":8923366,"line_start":810,"line_end":810,"column_start":9,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8926236,"byte_end":8926242,"line_start":899,"line_end":899,"column_start":19,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8926334,"byte_end":8926349,"line_start":905,"line_end":905,"column_start":19,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8926441,"byte_end":8926461,"line_start":911,"line_end":911,"column_start":19,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8927562,"byte_end":8927580,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8928831,"byte_end":8928851,"line_start":973,"line_end":973,"column_start":18,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2303}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8929096,"byte_end":8929114,"line_start":984,"line_end":984,"column_start":18,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":2303}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8929393,"byte_end":8929401,"line_start":1001,"line_end":1001,"column_start":9,"column_end":17},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8933058,"byte_end":8933066,"line_start":1095,"line_end":1095,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":402},"to":{"krate":2,"index":2120}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8933098,"byte_end":8933106,"line_start":1097,"line_end":1097,"column_start":25,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":402},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8933207,"byte_end":8933215,"line_start":1103,"line_end":1103,"column_start":20,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":402},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8934095,"byte_end":8934103,"line_start":1130,"line_end":1130,"column_start":18,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":402},"to":{"krate":2,"index":2303}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8935249,"byte_end":8935266,"line_start":1160,"line_end":1160,"column_start":9,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8938127,"byte_end":8938144,"line_start":1234,"line_end":1234,"column_start":25,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":408},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8938245,"byte_end":8938262,"line_start":1240,"line_end":1240,"column_start":20,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":408},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8939138,"byte_end":8939155,"line_start":1267,"line_end":1267,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":2303}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8940341,"byte_end":8940355,"line_start":1303,"line_end":1303,"column_start":9,"column_end":23},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8940638,"byte_end":8940650,"line_start":1315,"line_end":1315,"column_start":9,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941176,"byte_end":8941190,"line_start":1333,"line_end":1333,"column_start":31,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":460},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941227,"byte_end":8941241,"line_start":1334,"line_end":1334,"column_start":31,"column_end":45},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":460},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941279,"byte_end":8941291,"line_start":1336,"line_end":1336,"column_start":31,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941328,"byte_end":8941340,"line_start":1337,"line_end":1337,"column_start":31,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":8941353,"byte_end":8941358,"line_start":1339,"line_end":1339,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8952060,"byte_end":8952068,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":2120}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8952093,"byte_end":8952099,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":499},"to":{"krate":2,"index":2120}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8955288,"byte_end":8955293,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8963817,"byte_end":8963823,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966163,"byte_end":8966169,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":499},"to":{"krate":2,"index":2303}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966580,"byte_end":8966592,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":514},"to":{"krate":2,"index":9569}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8966941,"byte_end":8966949,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":6949}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967113,"byte_end":8967121,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":522},"to":{"krate":1,"index":1749}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8967134,"byte_end":8967142,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8968071,"byte_end":8968079,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":9569}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8968296,"byte_end":8968304,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":493},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/kuangjux/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":8968645,"byte_end":8968653,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":2303}}]}